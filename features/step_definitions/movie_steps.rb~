# Add a declarative step here for populating the DB with movies.

Given /the following movies exist/ do |movies_table|
  movies_table.hashes.each do |movie|
    # each returned element will be a hash whose key is the table header.
    # you should arrange to add that movie to the database here.
	@movie = Movie.create!(movie)
  end
    #flunk "Unimplemented"
end

# Make sure that one string (regexp) occurs before or after another one
#   on the same page

Then /I should see "(.*)" before "(.*)"/ do |e1, e2|
  #  ensure that that e1 occurs before e2.
  #  page.body is the entire content of the page as a string.
    #flunk "Unimplemented"
    assert page.has_content?(/#{e1}.*#{e2}/m), e1+" not found before "+e2+" in "+page.body
end

# Make it easier to express checking or unchecking several boxes at once
#  "When I uncheck the following ratings: PG, G, R"
#  "When I check the following ratings: G"

When /I (un)?check the following ratings: (.*)/ do |uncheck, rating_list|
  # HINT: use String#split to split up the rating_list, then
  #   iterate over the ratings and reuse the "When I check..." or
  #   "When I uncheck..." steps in lines 89-95 of web_steps.rb
    rating_list.split(",").each do |rating|
        opt_rating = "ratings_" + rating.strip
        if uncheck
           uncheck opt_rating
        else
           check opt_rating
        end
    end
end

Then /I should see all the movies/ do
  # Make sure that all the movies in the app are visible in the table
    all_movies = Movie.all
    tables = page.body
    all_movies.each do |movie|
        assert page.has_content?(/#{movie.title}/m), "movie "+movie.title+" not found"
    end
end
